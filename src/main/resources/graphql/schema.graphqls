type Query {
    hello: String!
    transactionById(id: ID!): Transaction
    transactionsByStatusId(statusId: ID!): [Transaction]
    transactionsByUsersId(usersId: ID!): [Transaction]
    transactionsByPropertyId(propertyId: ID!): [Transaction]
    transactions: [Transaction]
}

type Mutation{
    createTransaction(input: TransactionRequest!): String
}

input TransactionRequest{
    usersId: ID!
    propertiesId: ID!
    finalPrice: Float!
    statusId: ID!
    paymentMethod: String!
}

type Transaction{
    id: ID!
    users: Users!
    properties: Properties!
    finalPrice: Float!
    status: Status!
    paymentMethod: String!
}

type Status{
    id: ID!
    name: String!
}

type Users{
    id: ID!
    email: String!
    username: String!
    profilePicture: String!
    role: Role!
    mobileNumber: String!
}
type Role{
    id: ID!
    name: String!
}

type Properties {
    id: ID!
    users: Users!
    name: String!
    propertyCategories: PropertyCategories!
    description: String!
    checkInTime: Instant!
    checkOutTime: Instant!
    address: String!
}

type PropertyCategories{
    id: ID!
    name: String!
}

scalar Instant